version: "3"
services:
  main:
    build:
      context: ../
      dockerfile: Dockerfile
    image: "${SERVICE_NAME}:latest"
    container_name: "${SERVICE_NAME}"
    ports:
      - "${DEV_DOCKER_SERVICE_PORT-8000}:80"
      - "${DEV_DOCKER_DEBUG_PORT-8100}:${DEV_DOCKER_DEBUG_PORT-8100}"
    restart: ${DEV_DOCKER_AUTO_RESTART}
    command: ${DOCKER_CMD}
    environment:
      - NODE_ENV=development
      - PORT=80
    volumes:
      - ./wait-for-it.sh:/service/wait-for-it.sh
      - ../.env:/service/.env
      - ../build:/service/build
      - ../server:/service/server
      - ../package.json:/service/package.json
      - ../ava.config.js:/service/ava.config.js
    depends_on:
      - "redis"
      - "mongoimport"
      - "mysql"
  redis:
    image: "redis:latest"
    container_name: "${SERVICE_NAME}-redis"
    ports:
      - "${DEV_DOCKER_REDIS_PORT-6379}:6379"
  mongo:
    image: "mongo"
    container_name: "${SERVICE_NAME}-mongo"
    ports:
      - "${DEV_DOCKER_MONGO_PORT-27017}:27017"
  mongoimport:
    build:
      context: ../
      dockerfile: docker/Dockerfile-mongoimport
    image: "${SERVICE_NAME}-mongoimport:latest"
    container_name: "${SERVICE_NAME}-mongoimport"
    depends_on:
      - "mongo"
  mysql:
    image: "mysql:5.6"
    container_name: "${SERVICE_NAME}-mysql"
    ports:
      - "${DEV_DOCKER_MYSQL_PORT-3306}:3306"
    environment:
      - MYSQL_ALLOW_EMPTY_PASSWORD=yes
      - MYSQL_DATABASE=default
    volumes:
      - ./mysql.cnf:/etc/mysql/conf.d/encoding.cnf
      - ../import/mysql:/docker-entrypoint-initdb.d
